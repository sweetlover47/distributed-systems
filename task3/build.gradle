
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
        classpath "gradle.plugin.com.github.edeandrea:xjc-generation-gradle-plugin:1.6"

        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.4.1")
    }
}


plugins {
    id 'java'
}

configurations {
    jaxb
}

group 'ru.nsu.lebedeva'
version '1.0-SNAPSHOT'

apply plugin: "com.github.edeandrea.xjc-generation"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

sourceSets {

    generated {
        java.srcDir "generated"
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'

    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.20'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

    compile sourceSets.generated.output

    compile "org.glassfish.jaxb:jaxb-runtime:2.3.3"
    generatedCompile "org.glassfish.jaxb:jaxb-runtime:2.3.3"

    jaxb "org.glassfish.jaxb:jaxb-xjc:2.3.3"

    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.12'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation group: 'org.flywaydb', name: 'flyway-core'
}

test {
    useJUnitPlatform()
}


def addXjcTask(taskName, schema, pkg, dest) {
    file(dest).mkdirs()
    tasks.create(name: taskName, type: JavaExec) {
        classpath configurations.jaxb
        main 'com.sun.tools.xjc.XJCFacade'
        args schema, "-p", pkg, "-d", dest
    }
    compileGeneratedJava.dependsOn tasks.getByName(taskName)
}

/*
addXjcTask("xjcSchema1",
        "src/main/resources/xsd/OSMSchema.xsd",
        'ru.nsu.lebedeva.entity.generated',
        "src/main/java")*/
